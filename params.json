{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Chef cookbook for Nginx","google":"UA-10172882-2","name":"chef-nginx","body":"[![Build Status](https://travis-ci.org/phlipper/chef-nginx.png?branch=master)](https://travis-ci.org/phlipper/chef-nginx)\r\n\r\n## Description\r\n\r\nInstalls the [Nginx](http://nginx.org) web server.\r\n\r\n\r\n## Requirements\r\n\r\n### Supported Platforms\r\n\r\nThe following platforms are supported by this cookbook, meaning that the\r\nrecipes should run on these platforms without error:\r\n\r\n* Ubuntu\r\n* Debian\r\n\r\n### Cookbooks\r\n\r\n* [apt](http://community.opscode.com/cookbooks/apt) Opscode LWRP Cookbook\r\n\r\n### Chef\r\n\r\nIt is recommended to use a version of Chef `>= 10.16.4` as that is the target of my usage and testing, though this should work with most recent versions.\r\n\r\n### Ruby\r\n\r\nThis cookbook requires Ruby 1.9+ and is tested against:\r\n\r\n* 1.9.2\r\n* 1.9.3\r\n\r\n\r\n## Recipes\r\n\r\n* `nginx` - The default recipe which sets up the repository.\r\n* `nginx::configuration` - Internal recipe to setup the configuration files.\r\n* `nginx::service` - Internal recipe to setup the service definition.\r\n* `nginx::light` - Install and configure the `nginx-light` package.\r\n\r\n\r\n## Usage\r\n\r\nThis cookbook installs the Nginx components if not present, and pulls updates if they are installed on the system.\r\n\r\n\r\n## Attributes\r\n\r\n```ruby\r\ndefault[\"nginx\"][\"dir\"]      = \"/etc/nginx\"\r\ndefault[\"nginx\"][\"log_dir\"]  = \"/var/log/nginx\"\r\ndefault[\"nginx\"][\"user\"]     = \"www-data\"\r\ndefault[\"nginx\"][\"binary\"]   = \"/usr/sbin/nginx\"\r\ndefault[\"nginx\"][\"pid_file\"] = \"/var/run/nginx.pid\"\r\n\r\ndefault[\"nginx\"][\"log_format\"] = <<-FORMAT\r\n  '$remote_addr $host $remote_user [$time_local] \"$request\" '\r\n  '$status $body_bytes_sent \"$http_referer\" \"$http_user_agent\" \"$gzip_ratio\"'\r\nFORMAT\r\n\r\ndefault[\"nginx\"][\"daemon_disable\"] = false\r\n\r\ndefault[\"nginx\"][\"use_poll\"] = true\r\n\r\ndefault[\"nginx\"][\"gzip\"]              = \"on\"\r\ndefault[\"nginx\"][\"gzip_http_version\"] = \"1.0\"\r\ndefault[\"nginx\"][\"gzip_buffers\"]      = \"16 8k\"\r\ndefault[\"nginx\"][\"gzip_comp_level\"]   = \"2\"\r\ndefault[\"nginx\"][\"gzip_proxied\"]      = \"any\"\r\ndefault[\"nginx\"][\"gzip_vary\"]         = \"on\"\r\ndefault[\"nginx\"][\"gzip_min_length\"]   = \"0\"\r\ndefault[\"nginx\"][\"gzip_disable\"]      = %q|\"MSIE [1-6].(?!.*SV1)\"|\r\ndefault[\"nginx\"][\"gzip_types\"]        = %w[\r\n  text/css text/javascript text/xml text/plain text/x-component\r\n  application/x-javascript application/javascript application/json\r\n  application/xml application/rss+xml image/svg+xml\r\n  font/truetype font/opentype application/vnd.ms-fontobject\r\n]\r\n\r\ndefault[\"nginx\"][\"ignore_invalid_headers\"]      = \"on\"\r\ndefault[\"nginx\"][\"recursive_error_pages\"]       = \"on\"\r\ndefault[\"nginx\"][\"sendfile\"]                    = \"on\"\r\ndefault[\"nginx\"][\"server_name_in_redirect\"]     = \"off\"\r\ndefault[\"nginx\"][\"server_tokens\"]               = \"off\"\r\n\r\ndefault[\"nginx\"][\"buffers_enable\"]              = false\r\ndefault[\"nginx\"][\"client_body_temp_path\"]       = \"/var/spool/nginx-client-body 1 2\"\r\ndefault[\"nginx\"][\"client_body_buffer_size\"]     = \"8k\"\r\ndefault[\"nginx\"][\"client_header_buffer_size\"]   = \"1k\"\r\ndefault[\"nginx\"][\"client_max_body_size\"]        = \"1m\"\r\ndefault[\"nginx\"][\"large_client_header_buffers\"] = \"4 8k\"\r\n\r\ndefault[\"nginx\"][\"tcp_nopush\"]  = \"on\"\r\ndefault[\"nginx\"][\"tcp_nodelay\"] = \"off\"\r\n\r\ndefault[\"nginx\"][\"proxy_set_headers\"] = [\r\n  \"X-Real-IP $remote_addr\",\r\n  \"X-Forwarded-For $proxy_add_x_forwarded_for\",\r\n  \"Host $http_host\"\r\n]\r\ndefault[\"nginx\"][\"proxy_redirect\"] = \"off\"\r\ndefault[\"nginx\"][\"proxy_max_temp_file_size\"] = nil\r\ndefault[\"nginx\"][\"proxy_read_timeout\"] = nil\r\n\r\ndefault[\"nginx\"][\"keepalive\"]             = \"on\"\r\ndefault[\"nginx\"][\"keepalive_timeout\"]     = 65\r\ndefault[\"nginx\"][\"send_timeout\"]          = 5\r\ndefault[\"nginx\"][\"client_header_timeout\"] = 5\r\ndefault[\"nginx\"][\"client_body_timeout\"]   = 5\r\n\r\ndefault[\"nginx\"][\"worker_processes\"]   = node[\"cpu\"][\"total\"]\r\ndefault[\"nginx\"][\"worker_connections\"] = node[\"cpu\"][\"total\"].to_i * 1024\r\ndefault[\"nginx\"][\"server_names_hash_bucket_size\"] = 64\r\n\r\ndefault[\"nginx\"][\"conf_files\"] = %w[\r\n  general buffers gzip logs performance proxy timeouts ssl_session\r\n]\r\n\r\ndefault[\"nginx\"][\"ssl_session_cache_enable\"] = true\r\ndefault[\"nginx\"][\"ssl_session_cache\"]        = \"shared:SSL:10m\"\r\ndefault[\"nginx\"][\"ssl_session_timeout\"]      = \"10m\"\r\n\r\ndefault[\"nginx\"][\"passenger_enable\"]         = false\r\ndefault[\"nginx\"][\"passenger_max_pool_size\"]  = 6\r\ndefault[\"nginx\"][\"passenger_pool_idle_time\"] = 300\r\n```\r\n\r\n\r\n## TODO\r\n\r\nIncluding, but not limited to ...\r\n\r\n* Fully support all of the standard Chef-supported distributions\r\n* Support additonal build configurations\r\n* Support additonal configuration file attributes\r\n* Provider for creating virtual hosts\r\n\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n\r\n## License\r\n\r\n**chef-nginx**\r\n\r\n* Freely distributable and licensed under the [MIT license](http://phlipper.mit-license.org/2013/license.html).\r\n* Copyright (c) 2013 Phil Cohen (github@phlippers.net) [![endorse](http://api.coderwall.com/phlipper/endorsecount.png)](http://coderwall.com/phlipper)\r\n* http://phlippers.net/\r\n"}